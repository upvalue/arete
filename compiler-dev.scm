(load "scheme/syntax.scm")
(load "scheme/compiler.scm")

;; It would be possible to print quite good errors given enough info
;; For example --
;; (fx+ 2 "asdf")
;;        ^^^^^^
;; Expected fixnum but got string
;; How would we accomplish this?
;; We could print source information for each argument to a function

;; When an exception is generated by an APPLY, this could be passed via some kind of special
;; information, right?

;; We'd need the source information of where the arguments were generated...

(define (main)
  ;(pull-up-bootstraps)
  (pretty-print 
    (analyze-toplevel (list (list (list (make-rename #f 'lambda) '(a b) 'a 
                                        (list (make-rename #f 'set!) 'a #t)
                                        'a
                                        )))))
  ;(load "lab.scm")
  ;(load "examples/fib.scm")
)

;(set-top-level-value! 'COMPILER-LOG #t)

(main)
