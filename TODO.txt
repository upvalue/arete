runtime
- figure out how to get a stack trace with C++ after type errors
- hash tables
- ports
garbage collection
- better handling of large allocations
x semispace garbage collection for extreme debugging and robustness
- could semispace collector also be used to optionally compact the incremental collector?
- how to reduce code duplication between copy & mark routines?
interpreter
- let
x naming lambdas
x stack traces
  stack traces should include:
  + source code display (how hard?)
  x references to undefined symbols (reader should wrap with source info)
  + c-function names and source code locations
  
reader
- improve the mismatched bracket error message
- expression comments #;
- block comments #|
- extended symbols |
- utf8
x attach source code info to symbols by boxing them
language
- get some basic demos running. closures, fibonacci, that kind of stuff
- macro expansion
- r5rs support
- r7rs support (within reason)
